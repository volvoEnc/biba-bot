html
    head
        title Online сообщения
        block scripts
            script(src='https://cdnjs.cloudflare.com/ajax/libs/socket.io/2.3.0/socket.io.dev.js')
            script(src='https://cdn.jsdelivr.net/npm/vue/dist/vue.js')

    body
        div(class='main_box' id='vue_app')
            h1(v-if='conversations.length <= 0') Ждем сообщения...
            div(class='conversation_box' v-for='(conversation, index) in conversations' :key="conversation.id")
                div(class='conversation_head')
                    h4 {{conversation.title}} ({{conversation.count}})
                div(class='messages')
                    div(class='message' v-for='message in conversation.messages')
                        a(class='who' v-if='message.is_bot == false' target='_blank' :href='"https://vk.com/id"+message.user_id') {{message.author}}
                        div(class='who' v-else) Бот
                        div(class='text') {{message.text}}
                div(class='send_mess')
                    input(type='text' v-model='conversation.send_mess')
                    button(@click='send(index)') Отправить

script.
    const socket = io('192.162.246.78:#{port}');

    socket.on('new_message', data => {
        let add = true;
        let conv_idx;
        vue.conversations.forEach((conv, index) => {
            if (conv.id == data.conversation.id) {
                add = false;
                conv_idx = index;
            }
        });
        if (add) {
            let ob = {
                id: data.conversation.id,
                title: data.conversation.title,
                count: data.conversation.count,
                messages: [{
                    author: data.user.display_name,
                    text: data.text,
                    user_id: data.user.id,
                    is_bot: data.user.is_bot
                }]}
            vue.conversations.unshift(ob);
        } else {
            vue.conversations[conv_idx].messages.unshift({
                author: data.user.display_name,
                text: data.text,
                user_id: data.user.id,
                is_bot: data.user.is_bot
            });
        }
    });

    let vue = new Vue({
        el: '#vue_app',
        data: {
            conversations: [],
            message: []
        },
        methods: {
            send(index) {
                if (this.conversations[index].send_mess === '' || this.conversations[index].send_mess === undefined) return;
                socket.emit('send_message', {
                    conversation: {
                        id: this.conversations[index].id,
                        title: this.conversations[index].title,
                        count: this.conversations[index].count
                    },
                    user: { id: '', display_name: '', is_bot: true},
                    text: this.conversations[index].send_mess
                })
                this.conversations[index].send_mess = '';
            }
        }
    });

style.
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }
    body {
        background-color: rgb(240,240,240);
        display: flex;
        justify-content: center;
    }
    .main_box {
        background: rgba(235,235,235,0.7);
        max-width: 720px;
        width: 100%;
        padding: 20px 10px;
    }
    .conversation_box {
        background: rgba(225,225,225,0.7);
        width: 100%;
        border-radius: 5px;
        border: 2px solid grey;
        margin: 5px 0;
    }
    .conversation_head {
        display: flex;
        background: rgba(220, 220, 220, 0.85);
        width: 100%;
        height: 35px;
        padding: 0 5px;
        align-items: center;
        border-bottom: 1px solid rgba(0,0,0,.1);
    }
    .messages {
        display: flex;
        flex-direction: column;
        background: rgba(240, 240, 240, 0.85);
        width: 98%;
        margin: 3px auto;
        overflow-y: auto;
        max-height: 300px;
    }
    .message{
        display: flex;
        margin: 2px 0;
        border: 1px solid #949494;
    }
    .who {
        padding: 0 5px;
        display: flex;
        align-items: center;
        height: 30px;
        width: 300px;
        max-width: 50%;
        overflow: hidden;
    }
    .text {
        display: flex;
        width: 100%;
        display: flex;
        align-items: center;
    }